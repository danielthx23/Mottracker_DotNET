// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mottracker.Infrastructure.AppData;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Mottracker.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mottracker.Domain.Entities.CameraEntity", b =>
                {
                    b.Property<int>("IdCamera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCamera"));

                    b.Property<string>("IpCamera")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<string>("NomeCamera")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("PatioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<float?>("PosX")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<float?>("PosY")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdCamera");

                    b.HasIndex("PatioId");

                    b.ToTable("MT_CAMERA");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.ContratoEntity", b =>
                {
                    b.Property<int>("IdContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContrato"));

                    b.Property<int>("AtivoContrato")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ClausulasContrato")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DataDeEntradaContrato")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataDeExpiracaoContrato")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("DataUltimaRenovacaoContrato")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("HorarioDeDevolucaoContrato")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("NumeroRenovacoesContrato")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RenovacaoAutomaticaContrato")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int?>("UsuarioContratoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("ValorToralContrato")
                        .HasPrecision(10, 2)
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("IdContrato");

                    b.HasIndex("UsuarioContratoId")
                        .IsUnique()
                        .HasFilter("\"UsuarioContratoId\" IS NOT NULL");

                    b.ToTable("MT_CONTRATO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.EnderecoEntity", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEndereco"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR2(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<int?>("PatioEnderecoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("IdEndereco");

                    b.HasIndex("PatioEnderecoId")
                        .IsUnique()
                        .HasFilter("\"PatioEnderecoId\" IS NOT NULL");

                    b.ToTable("MT_ENDERECO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.LayoutPatioEntity", b =>
                {
                    b.Property<int>("IdLayoutPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLayoutPatio"));

                    b.Property<decimal>("Altura")
                        .HasPrecision(10, 2)
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("Comprimento")
                        .HasPrecision(10, 2)
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("Largura")
                        .HasPrecision(10, 2)
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<int?>("PatioLayoutPatioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdLayoutPatio");

                    b.HasIndex("PatioLayoutPatioId")
                        .IsUnique()
                        .HasFilter("\"PatioLayoutPatioId\" IS NOT NULL");

                    b.ToTable("MT_LAYOUT_PATIO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.MotoEntity", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<int>("AnoMoto")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CondicoesMoto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("ContratoMotoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("EstadoMoto")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("IdentificadorMoto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ModeloMoto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("MotoPatioAtualId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("MotoPatioOrigemId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("PlacaMoto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("QuilometragemMoto")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdMoto");

                    b.HasIndex("ContratoMotoId")
                        .IsUnique()
                        .HasFilter("\"ContratoMotoId\" IS NOT NULL");

                    b.HasIndex("MotoPatioAtualId");

                    b.ToTable("MT_MOTO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.PatioEntity", b =>
                {
                    b.Property<int>("IdPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatio"));

                    b.Property<DateTime>("DataPatio")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("MotosDisponiveisPatio")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("MotosTotaisPatio")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NomePatio")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdPatio");

                    b.ToTable("MT_PATIO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Property<int>("IdPermissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermissao"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NomePermissao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("IdPermissao");

                    b.ToTable("MT_PERMISSAO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.QrCodePontoEntity", b =>
                {
                    b.Property<int>("IdQrCodePonto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQrCodePonto"));

                    b.Property<string>("IdentificadorQrCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("LayoutPatioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<float>("PosX")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<float>("PosY")
                        .HasColumnType("BINARY_FLOAT");

                    b.HasKey("IdQrCodePonto");

                    b.HasIndex("LayoutPatioId");

                    b.ToTable("MT_QRCODE_PONTO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.TelefoneEntity", b =>
                {
                    b.Property<int>("IdTelefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTelefone"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdTelefone");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MT_TELEFONE");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("CNHUsuario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CPFUsuario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CriadoEmUsuario")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataNascimentoUsuario")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TokenUsuario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdUsuario");

                    b.ToTable("MT_USUARIO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.UsuarioPermissaoEntity", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PermissaoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Papel")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UsuarioId", "PermissaoId");

                    b.HasIndex("PermissaoId");

                    b.ToTable("MT_USUARIO_PERMISSAO");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.CameraEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.PatioEntity", "Patio")
                        .WithMany("CamerasPatio")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.ContratoEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.UsuarioEntity", "UsuarioContrato")
                        .WithOne("ContratoUsuario")
                        .HasForeignKey("Mottracker.Domain.Entities.ContratoEntity", "UsuarioContratoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UsuarioContrato");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.EnderecoEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.PatioEntity", "PatioEndereco")
                        .WithOne("EnderecoPatio")
                        .HasForeignKey("Mottracker.Domain.Entities.EnderecoEntity", "PatioEnderecoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PatioEndereco");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.LayoutPatioEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.PatioEntity", "PatioLayoutPatio")
                        .WithOne("LayoutPatio")
                        .HasForeignKey("Mottracker.Domain.Entities.LayoutPatioEntity", "PatioLayoutPatioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PatioLayoutPatio");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.MotoEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.ContratoEntity", "ContratoMoto")
                        .WithOne("MotoContrato")
                        .HasForeignKey("Mottracker.Domain.Entities.MotoEntity", "ContratoMotoId");

                    b.HasOne("Mottracker.Domain.Entities.PatioEntity", "MotoPatioAtual")
                        .WithMany("MotosPatioAtual")
                        .HasForeignKey("MotoPatioAtualId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ContratoMoto");

                    b.Navigation("MotoPatioAtual");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.QrCodePontoEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.LayoutPatioEntity", "LayoutPatio")
                        .WithMany("QrCodesLayoutPatio")
                        .HasForeignKey("LayoutPatioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LayoutPatio");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.TelefoneEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("Telefones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.UsuarioPermissaoEntity", b =>
                {
                    b.HasOne("Mottracker.Domain.Entities.PermissaoEntity", "Permissao")
                        .WithMany("UsuarioPermissoes")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mottracker.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("UsuarioPermissoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.ContratoEntity", b =>
                {
                    b.Navigation("MotoContrato");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.LayoutPatioEntity", b =>
                {
                    b.Navigation("QrCodesLayoutPatio");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.PatioEntity", b =>
                {
                    b.Navigation("CamerasPatio");

                    b.Navigation("EnderecoPatio");

                    b.Navigation("LayoutPatio");

                    b.Navigation("MotosPatioAtual");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Navigation("UsuarioPermissoes");
                });

            modelBuilder.Entity("Mottracker.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Navigation("ContratoUsuario");

                    b.Navigation("Telefones");

                    b.Navigation("UsuarioPermissoes");
                });
#pragma warning restore 612, 618
        }
    }
}
