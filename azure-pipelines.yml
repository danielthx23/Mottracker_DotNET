trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build .NET and Docker image
  jobs:
  - job: Build
    displayName: Build .NET app and Docker image
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UseDotNet@2
      displayName: 'Instalar .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x' 

    - script: |
        echo "Restaurando dependências..."
        dotnet restore
      displayName: 'Restore dependencies'

    - script: |
        echo "Compilando aplicação..."
        dotnet build --configuration Release --no-restore
      displayName: 'Build .NET project'

    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Mottracker/Dockerfile.Development'
        repository: '$(Build.Repository.Name)'
        tags: |
          $(tag)

- stage: Artifact
  displayName: 'Gerar e Publicar Artefato'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Publish
    displayName: 'Publicar artefato do build'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UseDotNet@2
      displayName: 'Instalar .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    - script: |
        echo "Publicando aplicação..."
        dotnet publish ./Mottracker/Mottracker.csproj --configuration Release --output $(Build.ArtifactStagingDirectory)/publish
      displayName: 'Dotnet Publish'

    - task: PublishBuildArtifacts@1
      displayName: 'Publicar artefatos'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/publish'
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: IntegrationTests
  displayName: Run Integration Tests
  dependsOn: Artifact
  condition: succeeded()
  jobs:
  - job: RunTests
    displayName: Run Integration Tests
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UseDotNet@2
      displayName: 'Instalar .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    - script: |
        echo "Rodando testes de integração..."
        dotnet test --configuration Release --no-build --logger "trx;LogFileName=integration_tests.trx"
      displayName: 'Run .NET Integration Tests'

    - task: PublishTestResults@2
      displayName: 'Publicar resultados dos testes'
      inputs:
        testResultsFiles: '**/integration_tests.trx'
        testRunTitle: 'Integration Tests'
        failTaskOnFailedTests: true

- stage: Deploy
  displayName: Deploy to Azure Web App
  dependsOn: IntegrationTests
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: Deploy Artifact to Azure Web App
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureWebApp@1
      displayName: 'Deploy artifact to Azure Web App'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appName: '$(webAppName)'
        package: '$(Pipeline.Workspace)/drop'
        appType: 'webApp'
